{
	"info": {
		"_postman_id": "e0d43be7-5a39-42ae-b9ed-603bed6abab9",
		"name": "Template Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37296069"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									" let deviceId = pm.response.headers.get(\"device-id\");",
									"    let responseBody = pm.response.json(); // Parse the response body as JSON",
									"    ",
									"    let token = responseBody.data?.token;",
									"    let refreshToken = responseBody.data?.refreshToken;",
									"",
									"    pm.collectionVariables.set(\"deviceId\", deviceId);",
									"    pm.collectionVariables.set(\"token\", token);",
									"    pm.collectionVariables.set(\"refreshToken\", refreshToken);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "device-id",
								"value": "{{deviceId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"ffewdfwewew\",\n\"email\":\"fbwjefwcwfwhe@he.com\",\n\"password\":\"yfuewb\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									" let deviceId = pm.response.headers.get(\"device-id\");",
									"    let responseBody = pm.response.json(); // Parse the response body as JSON",
									"    ",
									"    let token = responseBody.data?.token;",
									"    let refreshToken = responseBody.data?.refreshToken;",
									"",
									"    pm.collectionVariables.set(\"deviceId\", deviceId);",
									"    pm.collectionVariables.set(\"token\", token);",
									"    pm.collectionVariables.set(\"refreshToken\", refreshToken);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "device-id",
								"value": "{{deviceId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"fbwjefwhe@he.com\",\n    \"password\":\"yfuewb\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									" let deviceId = pm.response.headers.get(\"device-id\");",
									"    let responseBody = pm.response.json(); // Parse the response body as JSON",
									"    ",
									"    let token = responseBody.data?.token;",
									"    let refreshToken = responseBody.data?.refreshToken;",
									"",
									"    pm.collectionVariables.set(\"deviceId\", deviceId);",
									"    pm.collectionVariables.set(\"token\", token);",
									"    pm.collectionVariables.set(\"refreshToken\", refreshToken);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "refreshToken",
								"value": "{{refreshToken}}",
								"type": "text"
							},
							{
								"key": "device-id",
								"value": "{{deviceId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/refresh",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "device-id",
								"value": "{{deviceId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout from All Device",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "device-id",
								"value": "{{deviceId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/logAllOut",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"logAllOut"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Me",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "device-id",
								"value": "{{deviceId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/user/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"me"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"var deviceId = pm.environment.get('deviceId');",
					"",
					"// Check if the token exists",
					"if (deviceId) {",
					"    // Set the Authorization header for all requests in the collection",
					"    pm.request.headers.add({",
					"        key: 'device-id',",
					"        value: deviceId",
					"    });",
					"} else {",
					"    console.log('No access token found in environment');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "deviceId",
			"value": "",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		}
	]
}
